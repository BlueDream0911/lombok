<!--
  Copyright Â© 2009 Reinier Zwitserloot and Roel Spilker.
  
  Permission is hereby granted, free of charge, to any person obtaining a copy
  of this software and associated documentation files (the "Software"), to deal
  in the Software without restriction, including without limitation the rights
  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  copies of the Software, and to permit persons to whom the Software is
  furnished to do so, subject to the following conditions:
  
  The above copyright notice and this permission notice shall be included in
  all copies or substantial portions of the Software.
  
  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  THE SOFTWARE.
-->
<project name="lombok-deps-lombok-patcher" basedir="../.." default="install">
	<description>
This buildfile is part of projectlombok.org. It responsible for downloading, updating, and setting up the eclipse modules that are useful to have when working on lombok's eclipse integration. It's optional.
	</description>
	
	<property name="repository.eclipse.org-eclipse" value=":pserver:anonymous@dev.eclipse.org:/cvsroot/eclipse" />
	<property name="repository.eclipse.org-rt" value=":pserver:anonymous@dev.eclipse.org/cvsroot/rt" />
	<property name="eclipse.org.contrib.base" location=".." />
	
	<!-- Skips equinox because it's ENORMOUS and rarely needed. -->
	<target name="install-silent" depends="-check-eclipse.org,
		-force-eclipse.debug.target, install-eclipse.debug.target, update-eclipse.debug.target,
		-force-org.eclipse.jdt.core, checkout-org.eclipse.jdt.core, update-org.eclipse.jdt.core,
		-force-org.eclipse.jdt.ui, checkout-org.eclipse.jdt.ui, update-org.eclipse.jdt.ui,
		-force-org.eclipse.core.runtime, checkout-org.eclipse.core.runtime, update-org.eclipse.core.runtime,
		-force-org.eclipse.ltk.core.refactoring, checkout-org.eclipse.ltk.core.refactoring,  update-org.eclipse.ltk.core.refactoring" />
	
	<target name="install" depends="-check-eclipse.org,
		-ask-eclipse.debug.target, install-eclipse.debug.target, update-eclipse.debug.target,
		-ask-org.eclipse.jdt.core, checkout-org.eclipse.jdt.core, update-org.eclipse.jdt.core,
		-ask-org.eclipse.jdt.ui, checkout-org.eclipse.jdt.ui, update-org.eclipse.jdt.ui,
		-ask-org.eclipse.core.runtime, checkout-org.eclipse.core.runtime, update-org.eclipse.core.runtime,
		-ask-org.eclipse.ltk.core.refactoring, checkout-org.eclipse.ltk.core.refactoring,  update-org.eclipse.ltk.core.refactoring,
		-ask-org.eclipse.equinox, checkout-org.eclipse.equinox, update-org.eclipse.equinox" />
	
	<target name="-force-eclipse.debug.target" unless="eclipse.debug.target.available">
		<property name="eclipse.debug.target.create" value="true" />
	</target>
	
	<target name="-ask-eclipse.debug.target" unless="eclipse.debug.target.available">
		<input validargs="n,N,no,No,NO,y,Y,yes,Yes,YES" defaultvalue="no" addproperty="eclipse.debug.target.response">
Do you want me to create an eclipse debug target so you can launch a second eclipse, lombok-ized, in the eclipse debugger?
		</input>
		<condition property="eclipse.debug.target.create">
			<matches string="${eclipse.debug.target.response}" casesensitive="false" pattern="^y(es)?$" />
		</condition>
	</target>
	
	<target name="-force-org.eclipse.jdt.core" unless="org.eclipse.jdt.core.available">
		<property name="org.eclipse.jdt.core.checkout" value="true" />
	</target>
	
	<target name="-ask-org.eclipse.jdt.core" unless="org.eclipse.jdt.core.available">
		<input validargs="n,N,no,No,NO,y,Y,yes,Yes,YES" defaultvalue="no" addproperty="org.eclipse.jdt.core.response">
Do you want me to grab from CVS the 3.5 version of org.eclipse.jdt.core?
Lombok integrates with this eclipse module often, and you should grab it if you're going to work on lombok's eclipse integration.</input>
		<condition property="org.eclipse.jdt.core.checkout">
			<matches string="${org.eclipse.jdt.core.response}" casesensitive="false" pattern="^y(es)?$" />
		</condition>
	</target>
	
	<target name="-force-org.eclipse.jdt.ui" unless="org.eclipse.jdt.ui.available">
		<property name="org.eclipse.jdt.ui.checkout" value="true" />
	</target>
	
	<target name="-ask-org.eclipse.jdt.ui" unless="org.eclipse.jdt.ui.available">
		<input validargs="n,N,no,No,NO,y,Y,yes,Yes,YES" defaultvalue="no" addproperty="org.eclipse.jdt.ui.response">
Do you want me to grab from CVS the 3.5 version of org.eclipse.jdt.ui?
Lombok integrates with this eclipse module often, and you should grab it if you're going to work on lombok's eclipse integration.</input>
		<condition property="org.eclipse.jdt.ui.checkout">
			<matches string="${org.eclipse.jdt.ui.response}" casesensitive="false" pattern="^y(es)?$" />
		</condition>
	</target>
	
	<target name="-force-org.eclipse.core.runtime" unless="org.eclipse.core.runtime.available">
		<property name="org.eclipse.core.runtime.checkout" value="true" />
	</target>
	
	<target name="-ask-org.eclipse.core.runtime" unless="org.eclipse.core.runtime.available">
		<input validargs="n,N,no,No,NO,y,Y,yes,Yes,YES" defaultvalue="no" addproperty="org.eclipse.core.runtime.response">
Do you want me to grab from CVS the 3.5 version of org.eclipse.core.runtime?
Interacting with the filer and messager (for errors and warnings) requires core.runtime, as well as interacting with modules.
You may not need it unless you're going to work on those areas.
		</input>
		<condition property="org.eclipse.core.runtime.checkout">
			<matches string="${org.eclipse.core.runtime.response}" casesensitive="false" pattern="^y(es)?$" />
		</condition>
	</target>
	
	<target name="-force-org.eclipse.ltk.core.refactoring" unless="org.eclipse.ltk.core.refactoring.available">
		<property name="org.eclipse.ltk.core.refactoring.checkout" value="true" />
	</target>
	
	<target name="-ask-org.eclipse.ltk.core.refactoring" unless="org.eclipse.ltk.core.refactoring.available">
		<input validargs="n,N,no,No,NO,y,Y,yes,Yes,YES" defaultvalue="no" addproperty="org.eclipse.ltk.core.refactoring.response">
Do you want me to grab from CVS the 3.5 version of org.eclipse.ltk.core.refactoring?
Unless you're going to work with lombok's patching of the refactor scripts, you won't need it.
		</input>
		<condition property="org.eclipse.ltk.core.refactoring.checkout">
			<matches string="${org.eclipse.ltk.core.refactoring.response}" casesensitive="false" pattern="^y(es)?$" />
		</condition>
	</target>
	
	<target name="-force-org.eclipse.equinox" unless="org.eclipse.equinox.available">
		<property name="org.eclipse.equinox.checkout" value="true" />
	</target>
	
	<target name="-ask-org.eclipse.equinox" unless="org.eclipse.equinox.available">
		<input validargs="n,N,no,No,NO,y,Y,yes,Yes,YES" defaultvalue="no" addproperty="org.eclipse.equinox.response">
Do you want me to grab from CVS the 3.5 version of org.eclipse.equinox?
Unless you're going to work on lombok.patcher's OSGi integration, you won't need this.

WARNING: This project is enormous (350MB) and takes like an hour to check out. You should answer no unless you _really_ want it.
		</input>
		<condition property="org.eclipse.equinox.checkout">
			<matches string="${org.eclipse.equinox.response}" casesensitive="false" pattern="^y(es)?$" />
		</condition>
	</target>

	<target name="update" depends="-check-eclipse.org,
		update-eclipse.debug.target,
		update-org.eclipse.jdt.core,
		update-org.eclipse.jdt.ui,
		update-org.eclipse.core.runtime,
		update-org.eclipse.ltk.core.refactoring,
		update-org.eclipse.equinox" />
	
	<target name="build" />
	
	<target name="checkout-org.eclipse.jdt.core" if="org.eclipse.jdt.core.checkout">
		<cvs
				cvsRoot="${repository.eclipse.org-eclipse}"
				dest="${eclipse.org.contrib.base}"
				package="org.eclipse.jdt.core"
				tag="R3_5_maintenance"
				failonerror="true" />
		<echo level="info">eclipse module checked out in a sibling directory to the lombok project directory. You may want to add the project to your eclipse workspace.</echo>
	</target>
	
	<target name="update-org.eclipse.jdt.core" if="org.eclipse.jdt.core.available">
		<cvs command="update" dest="${eclipse.org.contrib.base}/org.eclipse.jdt.core" />
	</target>
	
	<target name="checkout-org.eclipse.jdt.ui" if="org.eclipse.jdt.ui.checkout">
		<cvs
				cvsRoot="${repository.eclipse.org-eclipse}"
				dest="${eclipse.org.contrib.base}"
				package="org.eclipse.jdt.ui"
				tag="R3_5_maintenance"
				failonerror="true" />
		<echo level="info">eclipse module checked out in a sibling directory to the lombok project directory. You may want to add the project to your eclipse workspace.</echo>
	</target>
	
	<target name="update-org.eclipse.jdt.ui" if="org.eclipse.jdt.ui.available">
		<cvs command="update" dest="${eclipse.org.contrib.base}/org.eclipse.jdt.ui" />
	</target>
	
	<target name="checkout-org.eclipse.core.runtime" if="org.eclipse.core.runtime.checkout">
		<cvs
				cvsRoot="${repository.eclipse.org-eclipse}"
				dest="${eclipse.org.contrib.base}"
				package="org.eclipse.core.runtime"
				tag="R3_5_1"
				failonerror="true" />
		<echo level="info">eclipse module checked out in a sibling directory to the lombok project directory. You may want to add the project to your eclipse workspace.</echo>
	</target>
	
	<target name="update-org.eclipse.core.runtime" if="org.eclipse.core.runtime.available">
		<cvs command="update" dest="${eclipse.org.contrib.base}/org.eclipse.core.runtime" />
	</target>
	
	<target name="checkout-org.eclipse.ltk.core.refactoring" if="org.eclipse.ltk.core.refactoring.checkout">
		<cvs
				cvsRoot="${repository.eclipse.org-eclipse}"
				dest="${eclipse.org.contrib.base}"
				package="org.eclipse.ltk.core.refactoring"
				tag="R3_5_1"
				failonerror="true" />
		<echo level="info">eclipse module checked out in a sibling directory to the lombok project directory. You may want to add the project to your eclipse workspace.</echo>
	</target>
	
	<target name="update-org.eclipse.ltk.core.refactoring" if="org.eclipse.ltk.core.refactoring.available">
		<cvs command="update" dest="${eclipse.org.contrib.base}/org.eclipse.ltk.core.refactoring" />
	</target>
	
	<target name="checkout-org.eclipse.equinox" if="org.eclipse.equinox.checkout">
		<cvs
				cvsRoot="${repository.eclipse.org-rt}"
				dest="${eclipse.org.contrib.base}"
				package="org.eclipse.equinox"
				failonerror="true" />
		<echo level="info">eclipse module checked out in a sibling directory to the lombok project directory. You may want to add the project to your eclipse workspace.</echo>
	</target>
	
	<target name="update-org.eclipse.equinox" if="org.eclipse.equinox.available">
		<cvs command="update" dest="${eclipse.org.contrib.base}/org.eclipse.equinox" />
	</target>
	
	<target name="install-eclipse.debug.target" if="eclipse.debug.target.create">
		<antcall target="-create-eclipse.debug.target" />
		<echo level="info">
		---------------------------

		Launch target configured; it should show up in your eclipse under the debug menu as "LombokizedEclipse".
		It does NOT hot-code-replace on lombok itself - you'll need to run 'ant dist' every time you want to use it. This is an unavoidable shortcoming of java agents. You can, however, breakpoint and step through your eclipse this way.

		---------------------------
		</echo>
	</target>
	
	<target name="update-eclipse.debug.target" if="eclipse.debug.target.available">
		<antcall target="-create-eclipse.debug.target" />
	</target>
	
	<target name="detect-mac">
		<condition property="startOnFirstThread" value="-XstartOnFirstThread">
			<os family="mac" />
		</condition>
		<condition property="d32" value="-d32">
			<os family="mac" />
		</condition>
		<condition property="d32" value="">
			<not><os family="mac" /></not>
		</condition>
	</target>
	
	<target name="-create-eclipse.debug.target" depends="detect-mac">
		<copy
				file="buildScripts/deps/eclipse-debug-target.template"
				tofile="LombokizedEclipse.launch"
				preservelastmodified="true"
				overwrite="true">
			<filterset>
				<filter token="START_ON_FIRST_THREAD" value="${startOnFirstThread}" />
				<filter token="D32" value="${d32}" />
			</filterset>
		</copy>
	</target>
	
	<target name="-check-eclipse.org">
		<available file="${eclipse.org.contrib.base}/org.eclipse.jdt.core/.project" property="org.eclipse.jdt.core.available" />
		<available file="${eclipse.org.contrib.base}/org.eclipse.jdt.ui/.project" property="org.eclipse.jdt.ui.available" />
		<available file="${eclipse.org.contrib.base}/org.eclipse.core.runtime/.project" property="org.eclipse.core.runtime.available" />
		<available file="${eclipse.org.contrib.base}/org.eclipse.ltk.core.refactoring/.project" property="org.eclipse.ltk.core.refactoring.available" />
		<available file="${eclipse.org.contrib.base}/org.eclipse.equinox/.project" property="org.eclipse.equinox.available" />
		<available file="LombokizedEclipse.launch" property="eclipse.debug.target.available" />
	</target>
</project>
